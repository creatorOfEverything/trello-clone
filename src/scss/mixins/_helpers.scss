// Создание псевдо-элемента
@mixin ps($display: block, $pos: absolute, $content: '') {
  content: $content;
  display: $display;
  position: $pos;
}

// Иконки fontawesome для псевдоэлемента
@mixin i($icon, $size: 14px, $color: #000, $style: '.fa') {
  @extend %fa-icon;
  @extend #{$style};
  @include ps($content: fa-content($icon));
  font-size: $size;
  color: $color;
}

// Медиа-запросы
$breakpoints: (
  'phone': 400px,
  'sm': 576px,
  // "phablet":      560px,
    // "tablet-small": 640px,
    'md': 768px,
  'lg': 992px,
  // "desktop":      1248px,
    'xl': 1440px
);

$titles: (
  h1: 32,
  h2: 25.6,
  h3: 19.2,
  h4: 12.8,
  h5: 8,
  h6: 3.2
);

// Медиазапросы
@mixin mq($width, $type: max) {
  @if map_has_key($breakpoints, $width) {
    $width: map_get($breakpoints, $width);
    @if $type == max {
      $width: $width - 1px;
    }
    @media only screen and (#{$type}-width: $width) {
      @content;
    }
  }
}

// Адаптивный шрифт
@mixin fs($size, $title) {
  $val: map-get($titles, $title);
  font-size: calc(
    #{$size} + #{$val} * (100vw - 540px) / (1200 - 540)
  ) !important;
}

//Центрирование позиционированием
@mixin c($direction: false) {
  @if $direction == 'x' {
    left: 50%;
    transform: translateX(-50%);
  }
  @if $direction == 'y' {
    top: 50%;
    transform: translateY(-50%);
  }
  @if $direction == 'both' {
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
  }
}

@mixin fp($x: initial, $y: initial) {
  display: flex;
  justify-content: $x;
  align-items: $y;
}

//Центрирование с заданной шириной
@mixin cw($width) {
  width: $width;
  margin: 0 auto;
}

// Z-index
@function z($name) {
  @if index($z-indexes, $name) {
    @return (length($z-indexes) - index($z-indexes, $name)) + 1;
  } @else {
    @warn 'There is no item "#{$name}" in this list; choose one of: #{$z-indexes}';
    @return null;
  }
}
$z-indexes: (
  'outdated-browser',
  'modal',
  'site-header',
  'page-wrapper',
  'site-footer'
);

@mixin tr($color, $direction, $size: 6px, $position: absolute, $round: false) {
  @include pseudo($pos: $position);
  width: 0;
  height: 0;
  @if $round {
    border-radius: 3px;
  }
  @if $direction == down {
    border-left: $size solid transparent;
    border-right: $size solid transparent;
    border-top: $size solid $color;
    margin-top: 0 - round($size / 2.5);
  } @else if $direction == up {
    border-left: $size solid transparent;
    border-right: $size solid transparent;
    border-bottom: $size solid $color;
    margin-bottom: 0 - round($size / 2.5);
  } @else if $direction == right {
    border-top: $size solid transparent;
    border-bottom: $size solid transparent;
    border-left: $size solid $color;
    margin-right: -$size;
  } @else if $direction == left {
    border-top: $size solid transparent;
    border-bottom: $size solid transparent;
    border-right: $size solid $color;
    margin-left: -$size;
  }
}

// Исключение или включение первого и последнего детей
@mixin l($style: false) {
  @if $style {
    &:last-child {
      #{$style}: 0;
    }
  } @else {
    &:last-child {
      @content;
    }
  }
}

@mixin f($style: false) {
  @if $style {
    &:first-child {
      #{$style}: 0;
    }
  } @else {
    &:first-child {
      @content;
    }
  }
}
